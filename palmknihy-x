#!/bin/bash
#import zaznamu Palmknihy, pův. ere-x
#1. stahne aktualni data z webu palmknih
#2. vybere z toho pujcitelne a s hodnotami isbn(elektronicke,ean) a isbn_tistene
#3. srovna s mvk01 bazi dle a) id ereading, b) isbn, ean. Nalezene v katalogu pak slouci a naimportuje u nich pole asas NUM s aktualnimi udaji o jednotce
    #!neimportuje teda zaznamy, ktere v katalogu dle isbn nenasel (snad protoze stazene zaznamy ereading neobshauji bib. popis)
#4. smaze vsechny jednotky u zaznamu e-reading a pomoci manage-50 je dle pole NUM vytvori znova

#RC1 20180905 - pokud e-kniha "skonci", tj. prestane se objevovat v stazenych datech, tak se bodem 4. smazou jeji jednotky, ale zustane bib zaznam s NUM polem pro jednotku na ereading. Opraveno 20180509, zaznamy s polem NUM (ereading i flexibooks) bez jakychkoli jednotek se smazou
#RC2 20180514 - do importovaneho pole NUM pridano datum importu podpole d, toto pole je pak indexovano do inswzu WNU spolu s podpolem q
#RC3 20190206 - pokud e-kniha "skonci", tj. prestane se objevovat v stazenych datech, smaze se RC1. Ale pokud se zaznam e-knihy priradil k zaznamu tistene, zustane tam pole NUM, pripadne i dalsi katal. popis vztahujici se k e-knize (isbn apod.). Nutno proverovat a odstranovat rucne, seznam k provereni se posila mailem.

admin_mail="it@msvk.cz"
#maxPrice= "50" # Nastavit maximální akceptovanou cenu výpůjčky. V er_xml_seq.xsl nastaveno <xsl:param name="max_price" select="500"/>
#allowedFormats= # Nastavit filtr na typ ekniha/audiokniha.  V er_xml_seq.xsl nastaveno <xsl:param name="allowed_formats" select="'ebook audiobook'"/>

cd $mvk01_dev/mvk01/scratch || exit
ds="$mvk01_dev/mvk01/scratch"

export YYYYMMDD=`date +%Y%m%d`

# Autorizační údaje
#username="4171"
#password="wb]j"
username="5"
password="phup"
auth_string="$(echo -n "$username:$password" | base64)"
url="https://core.palmknihy.cz/api/lib_books"

# Nastavení URL (tyden pred posledním stazenim) - neni pouzito
# URL: url="https://core.palmknihy.cz/api/lib_books?since=2023-10-24T13:00"
#newest_file=$(ls -t palmknihy_xml_rent-*.xml | head -1)
#file_creation_date=$(stat -c %y "$newest_file")
#week_ago_timestamp=$(date -d "$file_creation_date 7 days ago" +%s)
#week_ago_date=$(date -d "@$week_ago_timestamp" "+%Y-%m-%dT00:00")
#if [ -n "$newest_file" ]; then
#    url+="?since=$week_ago_date"
#fi

# Stáhnout gzip komprimovaný soubor z Palmknih
curl -o "palmknihy_rent-$YYYYMMDD.gz" -H "Accept-Encoding: gzip" -H "Authorization: Basic $auth_string" "$url"
# Kontrola stažení
if [ $? -eq 0 ]; then
  # Pokud je návratový kód curl 0 (úspěšný), pak dekomprimovat soubor a nakopírovat do .xml
  gunzip -c "palmknihy_rent-$YYYYMMDD.gz" > "palmknihy_rent-$YYYYMMDD.xml"
  cp -v "palmknihy_rent-$YYYYMMDD.xml" "$alephe_dev/jr/ebooks/scratch/"
else
  mail -s "Palmknihy import - chyba pri stazeni souboru s aktualnimi daty z $url" $admin_mail </dev/null
fi

date "+%Y%m%d-%H%M%S xsltproc" # ..." |tr '\n' '\t'

# Kontrola existence vstupního XML souboru
if [ -f "palmknihy_rent-"$YYYYMMDD".xml" ]; then
    echo "Vstupní XML soubor palmknihy_rent-"$YYYYMMDD".xml existuje. Spuštění transformace."
# Transformace XML na SEQ pomocí xsltproc
#000000080 020   L $$a9788020015822
#000000080 NUM   L $$k713$$mMSVK$$nBOOK$$o75$$qEREAD$$chttps://www.ereading.cz/kniha/107?priroda-a-kultura$$1$$2https://core.palmknihy.cz/web/data/Shop_ereadi ng.Preview.107.epub$$3https://core.palmknihy.cz/web/data/Shop_ereading.Preview.107.pdf$    $bEREAD713
#atd...
# zaroven se provede filtrace 
#    1. na tituly, co lze vypujcit, tj. rent=true
#    2. omezit tituly podle ceny
#    3. vybrat formát ze seznamu - allowed_formats= 'ebook audiobook'

#    xsltproc ../../jr/ebooks/er.xsl palmknihy_xml_rent-"$YYYYMMDD".xml > palmknihy_xml_rent-"$YYYYMMDD".tsv
#    xsltproc er_xml_seq.xsl palmknihy_rent-"$YYYYMMDD".xml > palmknihy-msvk."$YYYYMMDD".seq
echo "xsltproc --stringparam currentDate "$YYYYMMDD" ../../jr/ebooks/er_xml_seq.xsl palmknihy_rent-"$YYYYMMDD".xml > palmknihy-msvk."$YYYYMMDD".seq"
    xsltproc --stringparam currentDate "$YYYYMMDD" ../../jr/ebooks/er_xml_seq.xsl palmknihy_rent-"$YYYYMMDD".xml > palmknihy-msvk."$YYYYMMDD".seq

else
    echo "Vstupní XML soubor palmknihy_rent-"$YYYYMMDD".xml neexistuje. Transformace nemůže být provedena."
fi

printf "\nStazeno `grep "FMT   L" -c palmknihy-msvk."$YYYYMMDD".seq` zaznamu pripravenych pro dalsi zpracovani.\n\n"

if [ `grep "FMT   L" -c palmknihy-msvk."$YYYYMMDD".seq` -eq 0 ]; then
   echo "chyba - stazeno 0 zaznamu, nepodarilo se zrejme stahnout feed s daty. Koncim..."
   exit 1  #TODO soubor s false vypujckami - pro vymazání z alephu, když oba prázdné, konec, jinak jedeme dál #Ben-nebude potreba
fi

: <<'END'
#RC20190502 
#blacklist je v souboru ereading.blacklist : struktura, co radek to id k vylouceni zimportu
sed 's/#.*$//' $alephe_dev/jr/ebooks/ereading.blacklist  | sed '/^\s*$/d' | sed 's/^/^/' | sed 's/\s*$/~/' | sort >ereading.blacklist.tmp
echo "Blacklist filter (file ereading.blacklist) removed following IDs from import:"
grep -f ereading.blacklist.tmp ereading_xml_rent-"$YYYYMMDD".tsv
echo
grep -v -f ereading.blacklist.tmp ereading_xml_rent-"$YYYYMMDD".tsv >ereading_xml_rent-"$YYYYMMDD".tsv.tmp
mv -f ereading_xml_rent-"$YYYYMMDD".tsv.tmp ereading_xml_rent-"$YYYYMMDD".tsv
#RC end
END


#RC2 
# manage_36 dle rutiny ERE v  tab_match:
#   ERE   match_doc_gen                  TYPE=IND,TAG=NUM,SUBFIELD=k,CODE=ERE
# index ERE je dle tab11_acc: tab11_ind:Z30##       2 eread      ERE   3 --na z30 podpole 3, s filtrem jen na zaznamy kde $$2=='eread'
#    podpole 3, standardne signatura, je zde id knihy int(cca 10)
# a rozdeli dle id ereading na stavajici a nove knihy.

for i in palmknihy-msvk."$YYYYMMDD".seq ; do date "+%Y%m%d-%H%M%S manage_36 ERE";csh -f $aleph_proc/p_manage_36 MVK01,"$i","$i".ERE.new,"$i".ERE.rep,"$i".ERE.err,ERE, > $alephe_scratch/mvk01_p_manage_36.`date +%Y%m%d-%H%M%S` 2>&1;done  

#z novych najde jen ty co maji match na isbn BK020 upraven z 020## na 02###

for i in palmknihy-msvk."$YYYYMMDD".seq.ERE.new ; do date "+%Y%m%d-%H%M%S manage_36 BK020";csh -f $aleph_proc/p_manage_36 MVK01,"$i","$i".BK020.new,"$i".BK020.rep,"$i".BK020.err,BK020, > $alephe_scratch/mvk01_p_manage_36.`date +%Y%m%d-%H%M%S` 2>&1;done
echo "konec porovnani"

#pridana kontrola pokud se najde vice isbn,Matyas Bajger 20180509
if [ -s "$i".BK020.err ]; then
   mutt -s "Palmknihy import - nove knihy nalezene v katalogu, ale s vice vyskyty tistneho isbn" -a "${i}.BK020.err" -- $admin_mail < /dev/null
fi

#slouci jiz existujici dle id ereadig a isbn (rep) vybere jen pole NUM
egrep -h '^.{9} NUM' palmknihy-msvk."$YYYYMMDD".seq.ERE.rep palmknihy-msvk."$YYYYMMDD".seq.ERE.new.BK020.rep |sort > num"$YYYYMMDD"eread
#vybere z toho sysna
cut -c-9 num"$YYYYMMDD"eread|sort|uniq|awk '{print $1 "MVK01"}' > $alephe_scratch/m50."$YYYYMMDD"eread
printf "\nU `grep $ -c $alephe_scratch/m50."$YYYYMMDD"eread` stazenych zaznamu nalezen kompletni biblio zazn. v MVK01 dle matche eReadingID nebo ISBN.\nNyni se importuji...\n\n"

#a naimportuje to
for i in num"$YYYYMMDD"eread ; do date "+%Y%m%d-%H%M%S manage_18";csh -f $aleph_proc/p_manage_18 MVK01,$i,"$i".reject,"$i".log,OLD,,,FULL,COR,M,,,NO-CAT, > $alephe_scratch/mvk01_p_manage_18.`date +%Y%m%d-%H%M%S` 2>&1;done

#pridana kontrola odmitnutych zaznamu, Matyas Bajger 20180509
if [ -s "$i".reject ]; then
   mutt -s "Palmknihy import - manage-18 aktualizace stavajicich odmitla tyto zaznamy" -a "${i}.reject" -- $admin_mail < /dev/null
fi

#DEBUG
#read -p "Aktualizace pole NUM probehla. Pokračovat (enter) nebo zastavit (CTRL+C)? " userInput
#if [ -z "$userInput" ]; then
#    echo "Pokračuji ve vykonávání programu."
#else
#    echo "Koncim."
#    exit 0
#fi #DEBUG

#import novych zaznamu
#RC3 20181105 import novych zaznamu
echo; echo "IMPORT NOVYCH ZAZNAMU"; echo
newRecs="palmknihy-msvk."$YYYYMMDD".seq.ERE.new.BK020.new"

if [ -s $newRecs ]; then
  if [ -s $aleph_exe/yaz_client ]; then
   #ziskat isbn, stahnout z39, pridat pole NUM a importovat
   #loop over recNos
   recNos=`awk '{print $1;}' $newRecs | sort -u`
   let currentRec=1
   newFile2import="eread$YYYYMMDD"'_new.seq'
   recNonotfound='z39notfound.tmp'
   cp /dev/null $newFile2import
   cp /dev/null $recNonotfound
   for recNo in $recNos; do
      isbn=`grep "^$recNo" $newRecs | grep -E "(020   L|0243  L)" | sed 's/^.*\$\$a//' | sed 's/\$.*$//'`
      if [ "$isbn" = '' ]; then
         echo "Oops, record $numField has not ISBN"
         continue
      fi
      numField=`grep "^$recNo NUM" $newRecs` 
      numField=`echo "$numField" | sed 's/^......... //'`
      fmtField=`grep "^$recNo FMT" $newRecs`														  
      fmtField=`echo "$fmtField" | sed 's/^......... //'`
      echo; echo "Looking for ISBN $isbn ..."
      for isbns in $isbn; do
        # zpracování každé hodnoty ISBN
        #v nasledujicim radku nakonfigurovanz jednotlive z39target knihovny katalogy baze. 
        #syntax url1:port1/baze1 url2:port2/baze2 url3:port3/baze3
        #Berou se poporadi, jakmile se zaznam najde, hledani se ukonci. 
        #prehled z39.50 adres https://www.techlib.cz/cs/83296-z39-50-targetstalog.kkvysociny.cz:8888
        #z39targets='aleph.nkp.cz:9991/NKC-UTF aleph.mzk.cz:9991/MZK01-UTF aleph.vkol.cz:9991/SVK01 z3950.skat.cz:9999/skat ipac.kvkli.cz:8887/li_us_cat katalog.kkvysociny.cz:8888/un_cat svk7.svkkl.cz:8887/kl_us_cat '
#z3950.skat.cz:9999/skat - nehlasi se
#katalog.kkvysociny.cz:8888/un_cat  - odezva trva dlouho
        z39targets='aleph.nkp.cz:9991/NKC-UTF aleph.mzk.cz:9991/MZK01-UTF aleph.vkol.cz:9991/SVK01 ipac.kvkli.cz:8887/li_us_cat svk7.svkkl.cz:8887/kl_us_cat '
        #loop over catalogues 
        for library in $z39targets; do
           z39targetURL=`echo $library | sed 's/\/.*$//'` 
           z39base=`echo $library | sed 's/^[^\/]*\///'`
           rm -f z39download.tmp*
           printf "base $z39base\nfind @attr 1=7 $isbns\nshow" | $aleph_exe/yaz_client "$z39targetURL" -m z39download.tmp > z39download_log.tmp
#printf "base NKC-UTF\nfind @attr 1=7 8594050423794\nshow" | $aleph_exe/yaz_client "aleph.nkp.cz:9991" -m z39download.tmp > z39download_log.tmp
           #20240123 baze VK Olomouc SVK01 vraci zaznamy ve win1250, nutno prekonvertovat
           if [ "$z39targetURL" = "aleph.vkol.cz:9991" ]; then
             if [ -s z39download.tmp ]; then
               iconv -f windows-1250 -t utf-8 z39download.tmp >z39download.tmp.utf
               mv z39download.tmp.utf z39download.tmp
             fi
           fi
           if [ `grep 'Number of hits: 1' z39download_log.tmp -c | bc` = 1 ]; then
               echo "Base $z39targetURL ISBN FOUND - SEE FILE z39download.tmp"
             #konverze do Aleph sekvencniho
             if [ -s z39download.tmp ]; then
               csh -f $aleph_proc/p_file_02 'MVK01,z39download.tmp,z39download.tmp_seq,01,' | grep -i '[reading|error]'
               if [ ! -s z39download.tmp_seq ]; then
                 echo "ERROR - file converted to Marc sequential z39download.tmp_seq not found! Something went wrong while runnning p_file_02"
               else
                 #pridani pole IST s datumem pro dohledani v katalogu a pole NUM
                 echo '000000001 IST   L $$aeread'$YYYYMMDD >>z39download.tmp_seq
                 echo '000000001 '"$numField" >>z39download.tmp_seq
                 currentRecFormatted=`printf "%09d" "$currentRec"`
                 #20231106 odstraneni pole 001  #20240124 a odstraneni pole 910
                 #grep -v '^000000001 001' z39download.tmp_seq >z39download.tmp_seq.tmp
                 grep -v -e '^000000001 001' -e '^000000001 910' z39download.tmp_seq >z39download.tmp_seq.tmp
                 mv z39download.tmp_seq.tmp z39download.tmp_seq
                 #mat20240229 
                 ##neprebirat FMT ze stazeneho ale pouzit puvodni z feedu
                 if [[ ! "$fmtField" = '' ]]; then 
                   grep -v '^000000001 FMT' z39download.tmp_seq >z39download.tmp_seq.tmp
                   mv z39download.tmp_seq.tmp z39download.tmp_seq
                   echo '000000001 '"$fmtField" >>z39download.tmp_seq
                 fi 
                 #mat20240229 END
                 sed "s/^000000001/$currentRecFormatted/" z39download.tmp_seq >>$newFile2import
                 break 2
               fi
             fi
           elif [ `grep 'Number of hits: 0' z39download_log.tmp -c | bc` = 1 ]; then
              echo "Base $z39targetURL - nothing found"
           elif [ `grep 'Number of hits: [2-9]' z39download_log.tmp -c | bc` = 1 ]; then
              echo "WARNING : base $z39targetURL - more records found `grep 'Number of hits' z39download_log.tmp`"
   	       else
	          echo "ERROR - something went wrong when calling $Aleph_exe/yaz_client when calling $z39targetURL / base $z39base"
           fi
        done

      done #for isbn
	  if [ ! -s z39download.tmp_seq ]; then
          #zapsat $recno do souboru nenalezenych v jinych katalozich 
		  echo "$recNo" >> "$recNonotfound"
      fi

      rm -f z39download.tmp* 
      let currentRec++
    done
#nenalezene zaznamy pripojit pripojit k $newFile2import z ...new.bk020.new ty co jsou v $recNonotfound, cislo zaznamu currentrec = prvnich 9 znaku
grep -F -f "$recNonotfound" "$newRecs" | awk -v currentRec="$currentRec" '{printf "%09d%s\n", $1+currentRec, substr($0,10)}' >>$newFile2import
#rm -f "$recNonotfound"   TODO ben odpoznamkovat (vymazat)
#DEBUG

   #import novych zaznamu
   echo; echo 'IMPORTUJI NOVE ZAZNAMY'
   csh -f $aleph_proc/p_manage_18 "MVK01,$newFile2import,$newFile2import"'.reject'",$newFile2import"'.doc_log,NEW,EBOOI,,FULL,APP,M,,,ereading,'
   if [ -s "$ds/$newFile2import"'.reject' ]; then
      echo "Nektere zaznamy ODMITNUTY Z UPLNEHO IMPORTU :"
      cat $ds/$newFile2import'.reject'
      mail -s "Palmknihy import - Nektere zaznamy ODMITNUTY Z UPLNEHO IMPORTU" $admin_mail <"$ds/$newFile2import"'.reject'
   fi
   echo; echo "NOVE IMPORTOVANE ZAZNAMY:"
   cat $alephe_scratch/$newFile2import'.doc_log'
   mail -s "Palmknihy import - Nove importovane zaznamy, viz tez wsk=eread$YYYYMMDD" $admin_mail <$alephe_scratch/$newFile2import'.doc_log'
   #doplneni nove importovanych do seznamu pro manage-50
   cat $alephe_scratch/$newFile2import'.doc_log' >>$alephe_scratch/m50."$YYYYMMDD"eread
  else
     echo "ERROR - $aleph_exe/yaz_client nedded for downloading z39.50 records"
  fi
else
   echo "Zadne nove zaznamy k importu"; echo
fi
#DEBUG

#smaze vsechny jednotky ereading (nepujcene)
echo "delete from mvk50.z30 where Z30_COLLECTION = 'EREAD' and Z30_ITEM_STATUS = '75' and trim(Z30_ITEM_PROCESS_STATUS) is NULL;" | sqlplus aleph/aleph

# u souboru importovanych vytvori jednotky znova
for i in m50."$YYYYMMDD"eread ; do date "+%Y%m%d-%H%M%S manage_50";csh -f $aleph_proc/p_manage_50 MVK01,$i,000000000,000000000,MVK50,,,NUM,tab_hol_item_create.ereading,tab_hol_item_map.ereading,A,A,A,EREADING,,EREADING,,Y,Y, > $alephe_scratch/mvk01_p_manage_50.`date +%Y%m%d-%H%M%S` 2>&1;done

#aktualizace pole 856 
for i in m50."$YYYYMMDD"eread ; do date "+%Y%m%d-%H%M%S print_03" ; csh -f $aleph_proc/p_print_03 MVK01,$i,NUM##,FMT##,,,,,,,"$i".num,A,,,,N,eread, > $alephe_scratch/mvk01_p_print_03.`date +%Y%m%d-%H%M%S` 2>&1; done
for i in m50."$YYYYMMDD"eread.num ; do date "+%Y%m%d-%H%M%S manage_18" ; csh -f $aleph_proc/p_manage_18 MVK01,$i,"$i".rej,"$i".log,OLD,ELINK,,FULL,COR,M,,, eread, > $alephe_scratch/mvk01_p_manage_18.`date +%Y%m%d-%H%M%S` 2>&1; done
#TODO vymazat manage_21(globální změny)   pole STA=NA, vstup: m50."$YYYYMMDD"eread


#RC1 20180509 - v mvk01 zustanou zaznamy, ktere v prave stazenych datech jiz nejsou - maji pole NUM, ale nemaji zadne jednotky pripadne maji jine jednotky nez ereasing
echo Dohledavam starsi zaznamy eknih eReading a Flexibooks, ktere nejsou v aktualnich datech...`date`
#najde zaznamy s polem NUM
#najde ale i flexibooks, vse jde do pole num (8118 radku)
csh -f $aleph_proc/p_ret_01 'MVK01,,eread_flexi_num_all,000000000,999999999,,00,00000000,99999999,00000000,99999999,,AND,NOT,NUM##,,,,,,,,,,,,,,,,,,,,,00000000,99999999,MSVK,01,'
#vyexportuje zaznamy vcetne z30 pro kontrolu
csh -f $aleph_proc/p_print_03 'MVK01,eread_flexi_num_all,ALL,,,,,,,,eread_flexi_num_all.seq,A,,Z30,,N,'
#srovna to a najde zaznamy ereading, flexibooks, co nemaji uz zadnou jednotku.
sed 's/MVK01//' $alephe_scratch/eread_flexi_num_all | sort -u >$alephe_scratch/eread2del.1tmp #vsechny eread/eflex v mvk01
egrep '^[0-9]{9} Z30' eread_flexi_num_all.seq | awk '{print $1;}' | sort -u >$alephe_scratch/eread2del.2tmp #eflex/eread v mvk01 s jednotkama (expand pole z30)
comm -23 $alephe_scratch/eread2del.1tmp $alephe_scratch/eread2del.2tmp | sed 's/$/MVK01/' >$alephe_scratch/ebooks_no_longer_available.2del #vybere zaznamy zcela bez jednotek
if [ -s $alephe_scratch/ebooks_no_longer_available.2del ]; then
   echo 'Tyto zaznamy budou smazany (zaloha je v /exlibris/aleph/matyas/data/ebooks_no_longer_available"$YYYYMMDD".deleted) :'
   cat $alephe_scratch/ebooks_no_longer_available.2del
   echo;echo
   cp -v $alephe_scratch/ebooks_no_longer_available.2del ./
   #zazalohuje je a smaze tyto zaznamy bez jednotky
   sed 's/^/^/' $alephe_scratch/ebooks_no_longer_available.2del | sed 's/MVK01//' >$alephe_scratch/eread2del.tmp
   grep -f $alephe_scratch/eread2del.tmp eread_flexi_num_all.seq >eread2del.num
   cp -v eread2del.num $alephe_scratch
   cp -v eread2del.num $mvk01_dev/jr/ebooks/scratch/eread_deleted."$YYYYMMDD".seq
   csh -f $aleph_proc/p_manage_18 'MVK01,eread2del.num,eread2del.reject,eread2del.doc_log,OLD,,,FULL,DELDOC,M,'
   if [ -s eread2del.reject ]; then
      mail -s "Palmknihy import - mazani jiz neaktualnich zaznamu selhalo u techto sysen" $admin_mail <eread2del.reject
   fi
else
   echo 'OK, neni treba mazat zadne cele zaznamy'
fi
#RC3 20190206
#dohleda zaznamy s polem NUM a jeste s dalsi jednotkou mimo eread a eflex
grep '^......... Z30' eread_flexi_num_all.seq | grep -v '\$\$2EREAD' | grep -v '\$\$2EFLEX' | awk '{print $1;}' | sort -u >$alephe_scratch/eread2del.3.tmp
grep '^......... Z30' eread_flexi_num_all.seq | grep -e '\$\$2EREAD' -e '\$\$2EFLEX' | awk '{print $1;}' | sort -u >$alephe_scratch/eread2del.4.tmp
comm -23 $alephe_scratch/eread2del.3.tmp $alephe_scratch/eread2del.4.tmp >$alephe_scratch/books_with_burried_ebooks.sys
if [ -s $alephe_scratch/books_with_burried_ebooks.sys ]; then
   echo 'Tyto tistene zaznamy jiz nemaji eknihu, vymazu pole NUM a 85640:'
   cat $alephe_scratch/books_with_burried_ebooks.sys
   echo;echo
  #do souboru books_with_burried_ebooks.sys (sysna) pripojit MVK01
  awk '{printf "%sMVK01\n", substr($0, 1, 9)}' $alephe_scratch/books_with_burried_ebooks.sys > $alephe_scratch/num2del.tmp
  #vymazat pole NUM a 85640 (link pro výpůjčku) pro books_with_burried_ebooks.sys (num2del.tmp)
  csh -f $aleph_proc/p_manage_21 'MVK01,num2del.tmp,ereadnumdel,Y,,NUM,,,,Y,,,,,,,,,,,,,,,,N,,ereading,'
  csh -f $aleph_proc/p_manage_21 'MVK01,num2del.tmp,eread85640del,Y,,856,4,0,$$yVypůjčit*,Y,,,,,,,,,,,,,,,,N,,ereading,'
  mail -s 'Palmknihy/Flexibooks import palmknihy-x, tyto tistene zaznamy jiz nemaji e-knihu' $admin_mail <$alephe_scratch/books_with_burried_ebooks.sys
fi

cp -pf ./ereading* $mvk01_dev/jr/ebooks/scratch/
cp -pf ./num* $mvk01_dev/jr/ebooks/scratch/
rm -f $alephe_scratch/ebooks*tmp*
rm -f ./ebooks*tmp
rm -f $alephe_scratch/num2del.tmp

#wc ../../alephe/scratch/m50."$YYYYMMDD"eread

(egrep -h '^.{9} NUM' num* ../files/doc.seqaa* ; cat $alephe_scratch/proindex )|cut -c-9|sort|uniq > $alephe_scratch/proindex

#preindexuje import
wc -l $alephe_scratch/proindex;for i in proindex;do date "+%Y%m%d-%H%M%S manage_40";csh -f $aleph_proc/p_manage_40 MVK01,$i,,,, > $alephe_scratch/mvk01_p_manage_40.`date +%Y%m%d-%H%M%S` 2>&1;done

echo "select Z30_COLLECTION,Z30_ITEM_STATUS,Z30_OPEN_DATE,count(*) from mvk50.z30 where Z30_COLLECTION in ('EREAD','EFLEX') and trim(Z30_ITEM_PROCESS_STATUS) is NULL group by Z30_COLLECTION,Z30_ITEM_STATUS,Z30_OPEN_DATE order by Z30_COLLECTION,Z30_ITEM_STATUS,Z30_OPEN_DATE;" | sqlplus aleph/aleph


cat num"$YYYYMMDD"eread | mail -s 'Palmknihy import probehl' "$admin_mail" 

date "+%Y%m%d-%H%M%S done"
